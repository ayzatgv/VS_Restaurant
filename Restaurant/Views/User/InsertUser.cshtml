@model Restaurant.Models.ViewModels.InsertUserViewModel

@{
    ViewBag.Title = "InsertUser";
}

<h2>InsertUser</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken();
    //if(User.Identity.IsAuthenticated)
    //{
    <div class="form-horizontal">
        <h4>InsertUserViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FiresName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FiresName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FiresName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @type = "number", maxlength = 11 } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    <div>
        @Html.ActionLink("Back to Home", "Index", "Home")
        @if (!User.Identity.IsAuthenticated)
        {
            @Html.ActionLink("Back to LoginUser", "LoginUser", "User")
        }

        @if (User.IsInRole("Admin"))
        {
            @Html.ActionLink("Back to UserList", "SelectAllUsers", "User")
        }
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
